@import url("https://fonts.googleapis.com/css2?family=Comic+Neue:wght@300;400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap");

/* General */

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

/* Color Theme Swatches in Hex */

:root {
  --first: #f3feb0;
  --second: #fea443;
  --third: #705e78;
  --fourth: #a5aaa3;
  --fifth: #812f33;
}

/* Body, Headings, Text */

body {
  font-family: "Comic Neue", cursive;
  background-color: var(--third);
  font-size: 18px;
}

h1 {
  font-size: 3rem;
  color: var(--third);
  font-weight: 700;
}

h2 {
  color: var(--fourth);
  text-transform: uppercase;
  font-weight: 700;
}
p {
  color: var(--fifth);
  font-size: 1.25rem;
}

.talktome {
  display: flex;
  justify-content: center;
}

.dialog {
  position: relative;
  min-width: 30%;
  text-align: center;

  margin: 0 auto;
  background-color: #fff;
  border: 8px solid var(--fifth);
  border-radius: 30px;
  margin-bottom: 2%;
  padding: 20px;
}
.dialog::before,
.dialog::after {
  content: " ";
  position: absolute;
  width: 0;
  height: 0;
}
.dialog::before {
  left: 30px;
  bottom: -50px;
  border: 25px solid;
  border-color: var(--fifth) transparent transparent #333;
}
.dialog::after {
  left: 38px;
  bottom: -30px;
  border: 15px solid;
  border-color: #fff transparent transparent #fff;
}
/* General classes */
.container {
  margin: 3% 0;
}

button {
  text-transform: uppercase;
  padding: 10px 30px;
  background-color: var(--first);
  border: none;
  border-radius: 5px;
  min-width: 120px;
  box-shadow: var(--second) 1px 3px 2px;
  cursor: pointer;
}

/* Startscreen with round options, positioned at beginning over the game */

.start-screen {
  height: 50vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  background-color: var(--fifth);
  z-index: 999;
}
/* Choose round number */

form {
  color: var(--first);
}
fieldset {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  height: 50px;
  border: none;
}
fieldset div {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  width: 20%;
}
input[type="radio"] {
  appearance: none;
  border: 10px solid var(--third);
  border-radius: 50%;
}

input[type="radio"]:checked {
  border-color: var(--first);
}

/* Game */

.fight {
  width: 80%;
  top: 50%;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
  z-index: -999;
}

.score {
  display: flex;
  justify-content: space-between;
  text-align: center;
  padding: 0 5%;
}
.score div {
  width: 33%;
}

.hands {
  display: flex;
  justify-content: space-around;
}

.computer-hand {
  transform: rotateY(180deg);
}

#dialog,
.round-counter {
  text-align: center;
}

.user-hand,
.computer-hand {
  width: 25%;
}

#dancing {
  width: 50%;
}

.dancing-black {
  background: url("../img/black_dance.gif") center center/cover;
  background-repeat: no-repeat;
}
.angry-black {
  background: url("../img/black_nothappy.gif") center center/cover;
  background-repeat: no-repeat;
}

.bored-black {
  background: url("../img/black_whatever.gif") center center/cover;
  background-repeat: no-repeat;
}

.choices {
  width: 50%;
  display: flex;
  justify-content: space-around;
  margin: 0 auto;
}
.container-new-game {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  align-items: center;
}

.new-game {
  background-color: var(--fifth);
  color: var(--first);
}

/* Before round number is not choosen the magic doesn't happen */

/* So we have to fade-out however the playground, disable the buttons and fade back later in */
/* The same just the other way round happens to the start-screen */

.fadeout {
  opacity: 0;
  pointer-events: none;
  transition: 1s ease;
}

.fadein {
  opacity: 1;
  pointer-events: all;
  transition: 1s ease 0.5s;
}

/* For a better experience, let the hands shake like in real live */
@keyframes waitUser {
  0% {
    transform: translateY(0px);
  }
  15% {
    transform: translateY(-50px);
  }
  25% {
    transform: translateY(0px);
  }
  35% {
    transform: translateY(-50px);
  }
  50% {
    transform: translateY(0px);
  }
  65% {
    transform: translateY(-50px);
  }
  75% {
    transform: translateY(0px);
  }
  85% {
    transform: translateY(-50px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes waitComputer {
  0% {
    transform: rotateY(180deg) translateY(0px);
  }
  15% {
    transform: rotateY(180deg) translateY(-50px);
  }
  25% {
    transform: rotateY(180deg) translateY(0px);
  }
  35% {
    transform: rotateY(180deg) translateY(-50px);
  }
  50% {
    transform: rotateY(180deg) translateY(0px);
  }
  65% {
    transform: rotateY(180deg) translateY(-50px);
  }
  75% {
    transform: rotateY(180deg) translateY(0px);
  }
  85% {
    transform: rotateY(180deg) translateY(-50px);
  }
  100% {
    transform: rotateY(180deg) translateY(0px);
  }
}
